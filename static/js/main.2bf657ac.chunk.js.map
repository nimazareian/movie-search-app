{"version":3,"sources":["NominationContext.js","TopNavBar.js","MovieCard.js","MovieList.js","HomePage.js","SearchResultPage.js","App.js","index.js"],"names":["NominationContext","createContext","NominationProvider","props","useState","allSavedNominees","keys","Object","localStorage","i","length","push","JSON","parse","getItem","console","log","nominations","setNominations","Provider","value","children","require","config","useStyles","makeStyles","theme","title","textDecoration","color","display","breakpoints","up","searchDiv","marginLeft","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","right","width","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","TopNavBar","classes","searchVal","setSearchVal","useContext","history","useHistory","useLocation","AppBar","Toolbar","to","ROOT_URL","className","Typography","variant","noWrap","InputBase","onChange","event","target","onKeyPress","key","placeholder","autoFocus","root","input","inputProps","IconButton","aria-label","onClick","Badge","badgeContent","card","margin","boxShadow","transform","content","bottom","zIndex","background","left","cardWidth","movieTitle","fontFamily","fontWeight","marginTop","marginBottom","movieYear","cardImg","verticalAlign","nominateButton","top","MovieCard","movie","some","nominee","imdbID","selected","setSelected","Card","Poster","CardMedia","component","alt","Title","image","alert","prev","filter","removeItem","findIndex","setItem","stringify","Tooltip","TransitionComponent","Zoom","enterDelay","fontSize","Box","py","px","Year","gridItem","MovieList","Grid","container","justify","direction","movieList","map","item","lg","HomePage","searchResult","CircularProgress","pageSelector","SearchResultPage","searchQuery","match","params","id","searchResultJSON","setSearchResultJSON","page","setPage","numPages","setNumPages","useEffect","a","fetch","process","json","Math","ceil","totalResults","fetchSearchMovies","Response","Search","Pagination","count","window","scrollTo","size","Error","App","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","type","primary","light","main","dark","ThemeProvider","CssBaseline","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bf657ac.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const NominationContext = createContext();\r\n\r\nexport const NominationProvider = (props) => {\r\n  const [nominations, setNominations] = useState(() => {\r\n    // Get all previous nominees from browser localStorage\r\n    var allSavedNominees = [];\r\n    var keys = Object.keys(localStorage);\r\n    var i = keys.length;\r\n\r\n    while (i--) {\r\n      //convert to JSON and add to array\r\n      allSavedNominees.push(JSON.parse(localStorage.getItem(keys[i])));\r\n    }\r\n\r\n    console.log(\"imported nominees from storage\", allSavedNominees);\r\n    return allSavedNominees;\r\n  });\r\n\r\n  return (\r\n    <NominationContext.Provider value={[nominations, setNominations]}>{props.children}</NominationContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { ROOT_URL } from \"./App\";\r\nimport { AppBar, Toolbar, Typography, InputBase, fade, makeStyles, Badge, IconButton } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport NominateBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport NominateIcon from \"@material-ui/icons/Favorite\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  searchDiv: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    right: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction TopNavBar() {\r\n  const classes = useStyles();\r\n  var [searchVal, setSearchVal] = useState(\"\");\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n  var history = useHistory();\r\n  var location = useLocation();\r\n\r\n  const submitSearch = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      history.push(`${ROOT_URL}/search/${searchVal}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Link to={`${ROOT_URL}`} className={classes.title}>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Movie Nomination\r\n          </Typography>\r\n        </Link>\r\n        <div className={classes.searchDiv}>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              value={searchVal}\r\n              onChange={(event) => {\r\n                setSearchVal(event.target.value);\r\n              }}\r\n              onKeyPress={submitSearch}\r\n              placeholder=\"Search…\"\r\n              autoFocus={true}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          onClick={() => {\r\n            // TODO show all nomanies\r\n            console.log(\"nominations\", nominations);\r\n          }}\r\n        >\r\n          <Badge color=\"secondary\" badgeContent={nominations.length}>\r\n            <TrophyEmoji />\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default TopNavBar;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nconst cardHeight = 360;\r\nconst cardWidth = 270;\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    margin: \"auto\",\r\n    borderRadius: \"1rem\",\r\n    boxShadow: \"none\",\r\n    position: \"relative\",\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    transition: \"transform 0.3s\",\r\n    boxShadow: \"0 4px 8px rgba(0,0,0,0.35);\",\r\n    \"&:hover\": {\r\n      transform: \"translate(0, -5px)\",\r\n    },\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"64%\",\r\n      bottom: 0,\r\n      zIndex: 1,\r\n      background: \"linear-gradient(to top, #000, rgba(0,0,0,0))\",\r\n    },\r\n  },\r\n  content: {\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    left: 0,\r\n    bottom: 0,\r\n    width: cardWidth - 48,\r\n  },\r\n  movieTitle: {\r\n    fontFamily: \"Spartan\",\r\n    fontWeight: 700,\r\n    color: \"white\",\r\n    marginTop: 0,\r\n    marginBottom: 8,\r\n  },\r\n  movieYear: {\r\n    color: \"white\",\r\n    fontWeight: 400,\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n  },\r\n  cardImg: {\r\n    verticalAlign: \"text-top\",\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n  },\r\n  nominateButton: {\r\n    margin: 8,\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    color: \"white\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n});\r\n\r\nfunction MovieCard(props) {\r\n  const classes = useStyles();\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n  const movie = props.movie;\r\n  const [selected, setSelected] = useState(() => {\r\n    var alreadyNominated = nominations.some((nominee) => {\r\n      return nominee.imdbID === movie.imdbID;\r\n    });\r\n    return alreadyNominated;\r\n  });\r\n  const maxNominations = 5;\r\n\r\n  const removeNomination = () => {\r\n    setNominations((prev) => {\r\n      return prev.filter((nominee) => nominee.imdbID !== movie.imdbID);\r\n    });\r\n    localStorage.removeItem(movie.imdbID);\r\n  };\r\n\r\n  const addNomination = () => {\r\n    var index = nominations.findIndex((nominee) => nominee.imdbID === movie.imdbID);\r\n    if (index === -1) {\r\n      setNominations((prev) => {\r\n        return [...prev, movie];\r\n      });\r\n    }\r\n    localStorage.setItem(movie.imdbID, JSON.stringify(movie));\r\n  };\r\n\r\n  const updateNominations = () => {\r\n    if (localStorage.length >= maxNominations && !selected) {\r\n      alert(\"You have nominated 5 movies!\");\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      addNomination();\r\n    } else {\r\n      removeNomination();\r\n    }\r\n    //setState is async therefore updated state after updating nominations\r\n    setSelected(!selected);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        {/* <CardActionArea> */}\r\n        {movie.Poster !== \"N/A\" && (\r\n          <CardMedia\r\n            className={classes.cardImg}\r\n            component=\"img\"\r\n            alt={movie.Title}\r\n            image={movie.Poster}\r\n            title={movie.Title}\r\n          />\r\n        )}\r\n        <IconButton\r\n          className={classes.nominateButton}\r\n          variant=\"outlined\"\r\n          value=\"Nominate\"\r\n          selected={selected}\r\n          onClick={updateNominations}\r\n        >\r\n          <Tooltip TransitionComponent={Zoom} title=\"Nominate\" enterDelay={500}>\r\n            <TrophyEmoji fontSize=\"large\" color={selected ? \"secondary\" : \"primary\"} />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <Box py={3} px={3} className={classes.content}>\r\n          <h2 className={classes.movieTitle}>{movie.Title}</h2>\r\n          <h3 className={classes.movieYear}>{movie.Year}</h3>\r\n        </Box>\r\n        {/* </CardActionArea> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    width: \"350px\",\r\n  },\r\n}));\r\n\r\nfunction MovieList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" spacing={3} direction=\"row\" alignItems=\"flex-start\">\r\n      {props.movieList.map((movie) => {\r\n        return (\r\n          <Grid className={classes.gridItem} item key={movie.imdbID} lg={3}>\r\n            <MovieCard movie={movie} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useContext } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\nimport { NominationContext } from \"./NominationContext\";\r\n\r\nfunction HomePage() {\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Nominations:</h1>\r\n      <MovieList movieList={nominations} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport MovieList from \"./MovieList\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n// import * as searchResultJSON from \"./sample_data.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchResult: {\r\n    // boxSizing: \"border-box\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  CircularProgress: {\r\n    // display: flex;\r\n    // justify-content: center;\r\n    // align-items: center;\r\n  },\r\n  pageSelector: {\r\n    margin: \"35px 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nfunction SearchResultPage(props) {\r\n  const classes = useStyles();\r\n  const searchQuery = props.match.params.id;\r\n  const [searchResultJSON, setSearchResultJSON] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [numPages, setNumPages] = useState(4);\r\n\r\n  useEffect(() => {\r\n    const fetchSearchMovies = async () => {\r\n      const searchResult = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=${searchQuery}&page=${page}`\r\n      );\r\n\r\n      const searchResultJSON = await searchResult.json();\r\n      setSearchResultJSON(searchResultJSON);\r\n      setNumPages(Math.ceil(searchResultJSON.totalResults / 10));\r\n    };\r\n    fetchSearchMovies();\r\n  }, [searchQuery, page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [searchQuery]);\r\n\r\n  const changePage = (event, value) => {\r\n    setPage(value);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.searchResult}>\r\n      {searchResultJSON.Response === \"True\" ? (\r\n        <div>\r\n          <h2>\r\n            {searchResultJSON.totalResults} results found for {searchQuery}\r\n          </h2>\r\n          <MovieList movieList={searchResultJSON.Search} />\r\n          {numPages > 1 && (\r\n            <Pagination\r\n              count={numPages}\r\n              page={page}\r\n              onChange={changePage}\r\n              className={classes.pageSelector}\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n            />\r\n          )}\r\n        </div>\r\n      ) : searchResultJSON.Response === \"False\" ? (\r\n        <h2>Error: {searchResultJSON.Error}</h2>\r\n      ) : (\r\n        <CircularProgress color=\"secondary\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultPage;\r\n","import React from \"react\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TopNavBar from \"./TopNavBar\";\nimport HomePage from \"./HomePage\";\nimport SearchResultPage from \"./SearchResultPage\";\nimport { NominationProvider } from \"./NominationContext\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nexport const ROOT_URL = \"/movie-search-app\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  // const myColors = {\n\n  // }\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n          primary: {\n            light: \"#00818a\",\n            main: \"#8f1eff\",\n            dark: \"#8f1eff\",\n          },\n          // secondary: {\n          //   light: myColors.whitesmoke,\n          //   main: myColors.white,\n          //   dark: myColors.snow,\n          // },\n          // info: {\n          //   light: myColors.greenLight,\n          //   main: myColors.green,\n          //   dark: myColors.greenDark,\n          // }\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <NominationProvider>\n        <Router>\n          <div className=\"App\">\n            <TopNavBar />\n            <Switch>\n              <Route path={`${ROOT_URL}`} exact component={HomePage} />\n              <Route path={`${ROOT_URL}/search/:id`} component={SearchResultPage} />\n            </Switch>\n          </div>\n        </Router>\n      </NominationProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}