{"version":3,"sources":["NominationContext.js","TopNavBar.js","MovieCard.js","MovieList.js","HomePage.js","SearchResultPage.js","App.js","index.js"],"names":["NominationContext","createContext","NominationProvider","props","useState","allSavedNominees","keys","Object","localStorage","i","length","push","JSON","parse","getItem","console","log","nominations","setNominations","Provider","value","children","require","config","useStyles","makeStyles","theme","title","textDecoration","color","display","breakpoints","up","searchDiv","marginLeft","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","right","width","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","nominationIcon","TopNavBar","classes","useContext","useTheme","useMediaQuery","down","searchVal","setSearchVal","history","useHistory","AppBar","Toolbar","to","ROOT_URL","className","Typography","variant","noWrap","InputBase","onChange","event","target","onKeyPress","key","placeholder","autoFocus","root","input","inputProps","IconButton","aria-label","Tooltip","TransitionComponent","Zoom","Badge","badgeContent","card","margin","boxShadow","transform","content","bottom","zIndex","background","left","cardWidth","movieTitle","fontFamily","fontWeight","marginTop","marginBottom","movieYear","cardImg","verticalAlign","nominateButton","top","MovieCard","movie","some","nominee","imdbID","selected","setSelected","Card","Poster","CardMedia","component","alt","Title","image","onClick","alert","prev","filter","removeItem","findIndex","setItem","stringify","enterDelay","fontSize","Box","py","px","Year","gridItem","MovieList","Grid","container","justify","direction","movieList","map","item","lg","pageTitle","HomePage","searchResult","pageSelector","searchInfoText","SearchResultPage","searchQuery","match","params","id","searchResultJSON","setSearchResultJSON","page","setPage","numPages","setNumPages","useEffect","a","fetch","process","json","Math","ceil","totalResults","fetchSearchMovies","Response","Search","Pagination","count","window","scrollTo","Error","CircularProgress","maxWidth","App","prefersDarkMode","React","useMemo","createMuiTheme","type","primary","light","main","dark","ThemeProvider","CssBaseline","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.735f7178.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const NominationContext = createContext();\r\n\r\nexport const NominationProvider = (props) => {\r\n  const [nominations, setNominations] = useState(() => {\r\n    // Get all previous nominees from browser localStorage\r\n    var allSavedNominees = [];\r\n    var keys = Object.keys(localStorage);\r\n    var i = keys.length;\r\n\r\n    while (i--) {\r\n      //convert to JSON and add to array\r\n      allSavedNominees.push(JSON.parse(localStorage.getItem(keys[i])));\r\n    }\r\n\r\n    console.log(\"imported nominees from storage\", allSavedNominees);\r\n    return allSavedNominees;\r\n  });\r\n\r\n  return (\r\n    <NominationContext.Provider value={[nominations, setNominations]}>{props.children}</NominationContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { ROOT_URL } from \"./App\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  InputBase,\r\n  fade,\r\n  makeStyles,\r\n  Badge,\r\n  Tooltip,\r\n  Zoom,\r\n  useMediaQuery,\r\n  useTheme,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  searchDiv: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    right: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  nominationIcon: {\r\n    // marginLeft: 7,\r\n  },\r\n}));\r\n\r\nfunction TopNavBar() {\r\n  const classes = useStyles();\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  var [searchVal, setSearchVal] = useState(\"\");\r\n  var history = useHistory();\r\n\r\n  const submitSearch = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      history.push(`${ROOT_URL}/search/${searchVal}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Link to={`${ROOT_URL}`} className={classes.title}>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Movie Nomination\r\n          </Typography>\r\n        </Link>\r\n        <div className={classes.searchDiv}>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              value={searchVal}\r\n              onChange={(event) => {\r\n                setSearchVal(event.target.value);\r\n              }}\r\n              onKeyPress={submitSearch}\r\n              placeholder=\"Search…\"\r\n              autoFocus={true}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Link to={`${ROOT_URL}`}>\r\n          <IconButton aria-label=\"Nominations\">\r\n            <Tooltip TransitionComponent={Zoom} title={`${nominations.length} Movies Nominated`}>\r\n              <Badge color=\"secondary\" badgeContent={nominations.length}>\r\n                <TrophyEmoji className={classes.nominationIcon} />\r\n              </Badge>\r\n            </Tooltip>\r\n          </IconButton>\r\n        </Link>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default TopNavBar;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nconst cardHeight = 360;\r\nconst cardWidth = 270;\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    margin: \"auto\",\r\n    borderRadius: \"1rem\",\r\n    boxShadow: \"none\",\r\n    position: \"relative\",\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    transition: \"transform 0.3s\",\r\n    boxShadow: \"0 4px 8px rgba(0,0,0,0.35);\",\r\n    \"&:hover\": {\r\n      transform: \"translate(0, -5px)\",\r\n    },\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"64%\",\r\n      bottom: 0,\r\n      zIndex: 1,\r\n      background: \"linear-gradient(to top, #000, rgba(0,0,0,0))\",\r\n    },\r\n  },\r\n  content: {\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    left: 0,\r\n    bottom: 0,\r\n    width: cardWidth - 48,\r\n  },\r\n  movieTitle: {\r\n    fontFamily: \"Spartan\",\r\n    fontWeight: 700,\r\n    color: \"white\",\r\n    marginTop: 0,\r\n    marginBottom: 8,\r\n  },\r\n  movieYear: {\r\n    color: \"white\",\r\n    fontWeight: 400,\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n  },\r\n  cardImg: {\r\n    verticalAlign: \"text-top\",\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n  },\r\n  nominateButton: {\r\n    margin: 8,\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    color: \"white\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n});\r\n\r\nfunction MovieCard(props) {\r\n  const classes = useStyles();\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n  const movie = props.movie;\r\n  const [selected, setSelected] = useState(() => {\r\n    var alreadyNominated = nominations.some((nominee) => {\r\n      return nominee.imdbID === movie.imdbID;\r\n    });\r\n    return alreadyNominated;\r\n  });\r\n  const maxNominations = 5;\r\n\r\n  const removeNomination = () => {\r\n    setNominations((prev) => {\r\n      return prev.filter((nominee) => nominee.imdbID !== movie.imdbID);\r\n    });\r\n    localStorage.removeItem(movie.imdbID);\r\n  };\r\n\r\n  const addNomination = () => {\r\n    var index = nominations.findIndex((nominee) => nominee.imdbID === movie.imdbID);\r\n    if (index === -1) {\r\n      setNominations((prev) => {\r\n        return [...prev, movie];\r\n      });\r\n    }\r\n    localStorage.setItem(movie.imdbID, JSON.stringify(movie));\r\n  };\r\n\r\n  const updateNominations = () => {\r\n    if (localStorage.length >= maxNominations && !selected) {\r\n      alert(\"You have nominated 5 movies!\");\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      addNomination();\r\n    } else {\r\n      removeNomination();\r\n    }\r\n    //setState is async therefore updated state after updating nominations\r\n    setSelected(!selected);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        {/* <CardActionArea> */}\r\n        {movie.Poster !== \"N/A\" && (\r\n          <CardMedia\r\n            className={classes.cardImg}\r\n            component=\"img\"\r\n            alt={movie.Title}\r\n            image={movie.Poster}\r\n            title={movie.Title}\r\n          />\r\n        )}\r\n        <IconButton\r\n          className={classes.nominateButton}\r\n          variant=\"outlined\"\r\n          value=\"Nominate\"\r\n          selected={selected}\r\n          onClick={updateNominations}\r\n        >\r\n          <Tooltip TransitionComponent={Zoom} title=\"Nominate\" enterDelay={500}>\r\n            <TrophyEmoji fontSize=\"large\" color={selected ? \"secondary\" : \"primary\"} />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <Box py={3} px={3} className={classes.content}>\r\n          <h2 className={classes.movieTitle}>{movie.Title}</h2>\r\n          <h3 className={classes.movieYear}>{movie.Year}</h3>\r\n        </Box>\r\n        {/* </CardActionArea> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    width: \"350px\",\r\n  },\r\n}));\r\n\r\nfunction MovieList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" spacing={3} direction=\"row\" alignItems=\"flex-start\">\r\n      {props.movieList.map((movie) => {\r\n        return (\r\n          <Grid className={classes.gridItem} item key={movie.imdbID} lg={3}>\r\n            <MovieCard movie={movie} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useContext } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageTitle: {\r\n    marginLeft: 15,\r\n  },\r\n}));\r\n\r\nfunction HomePage() {\r\n  const classes = useStyles();\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={classes.pageTitle}>Nominations:</h1>\r\n      <MovieList movieList={nominations} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport MovieList from \"./MovieList\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n// import * as searchResultJSON from \"./sample_data.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchResult: {\r\n    // boxSizing: \"border-box\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  pageSelector: {\r\n    margin: \"35px 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  searchInfoText: {\r\n    marginLeft: 15,\r\n  },\r\n}));\r\n\r\nfunction SearchResultPage(props) {\r\n  const classes = useStyles();\r\n  const searchQuery = props.match.params.id;\r\n  const [searchResultJSON, setSearchResultJSON] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [numPages, setNumPages] = useState(4);\r\n\r\n  useEffect(() => {\r\n    const fetchSearchMovies = async () => {\r\n      const searchResult = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=${searchQuery}&page=${page}`\r\n      );\r\n\r\n      const searchResultJSON = await searchResult.json();\r\n      setSearchResultJSON(searchResultJSON);\r\n      setNumPages(Math.ceil(searchResultJSON.totalResults / 10));\r\n    };\r\n    fetchSearchMovies();\r\n  }, [searchQuery, page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [searchQuery]);\r\n\r\n  const changePage = (event, value) => {\r\n    setPage(value);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.searchResult}>\r\n      {searchResultJSON.Response === \"True\" ? (\r\n        <div>\r\n          <h2 className={classes.searchInfoText}>\r\n            {searchResultJSON.totalResults} results found for {searchQuery}\r\n          </h2>\r\n          <MovieList movieList={searchResultJSON.Search} />\r\n          {numPages > 1 && (\r\n            <Pagination\r\n              count={numPages}\r\n              page={page}\r\n              onChange={changePage}\r\n              className={classes.pageSelector}\r\n              color=\"secondary\"\r\n            />\r\n          )}\r\n        </div>\r\n      ) : searchResultJSON.Response === \"False\" ? (\r\n        <h2 className={classes.searchInfoText}>Error: {searchResultJSON.Error}</h2>\r\n      ) : (\r\n        <CircularProgress color=\"secondary\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultPage;\r\n","import React from \"react\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport TopNavBar from \"./TopNavBar\";\nimport HomePage from \"./HomePage\";\nimport SearchResultPage from \"./SearchResultPage\";\nimport { NominationProvider } from \"./NominationContext\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport const ROOT_URL = \"/movie-search-app\";\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    maxWidth: 1500,\n    margin: \"0 auto\",\n    [theme.breakpoints.up(\"sm\")]: {\n      //   width: \"auto\",\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  // const myColors = {\n\n  // }\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n          primary: {\n            light: \"#00818a\",\n            main: \"#8f1eff\",\n            dark: \"#8f1eff\",\n          },\n          // secondary: {\n          //   light: myColors.whitesmoke,\n          //   main: myColors.white,\n          //   dark: myColors.snow,\n          // },\n          // info: {\n          //   light: myColors.greenLight,\n          //   main: myColors.green,\n          //   dark: myColors.greenDark,\n          // }\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <NominationProvider>\n        <Router>\n          <div className=\"App\">\n            <TopNavBar />\n            <Switch>\n              <div className={classes.page}>\n                <Route path={`${ROOT_URL}`} exact component={HomePage} />\n                <Route path={`${ROOT_URL}/search/:id`} component={SearchResultPage} />\n                <Route path=\"*\">\n                  <Redirect to={`${ROOT_URL}`} />\n                </Route>\n              </div>\n            </Switch>\n          </div>\n        </Router>\n      </NominationProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}