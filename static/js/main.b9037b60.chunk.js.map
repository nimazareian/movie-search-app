{"version":3,"sources":["NominationContext.js","TopNavBar.js","MovieCard.js","MovieList.js","HomePage.js","SearchResultPage.js","App.js","index.js"],"names":["NominationContext","createContext","NominationProvider","props","useState","allSavedNominees","keys","Object","localStorage","i","length","push","JSON","parse","getItem","console","log","nominations","setNominations","Provider","value","children","require","config","useStyles","makeStyles","theme","title","textDecoration","color","display","breakpoints","up","searchDiv","marginLeft","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","right","width","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","TopNavBar","classes","searchVal","setSearchVal","useContext","history","useHistory","useLocation","AppBar","Toolbar","to","className","Typography","variant","noWrap","InputBase","onChange","event","target","onKeyPress","key","placeholder","autoFocus","root","input","inputProps","IconButton","aria-label","onClick","Badge","badgeContent","card","margin","boxShadow","transform","content","bottom","zIndex","background","left","cardWidth","movieTitle","fontFamily","fontWeight","marginTop","marginBottom","movieYear","cardImg","verticalAlign","nominateButton","top","MovieCard","movie","some","nominee","imdbID","selected","setSelected","Card","Poster","CardMedia","component","alt","Title","image","alert","prev","filter","removeItem","findIndex","setItem","stringify","Tooltip","TransitionComponent","Zoom","enterDelay","fontSize","Box","py","px","Year","gridItem","MovieList","Grid","container","justify","direction","movieList","map","item","lg","HomePage","searchResult","CircularProgress","pageSelector","SearchResultPage","searchQuery","match","params","id","searchResultJSON","setSearchResultJSON","page","setPage","numPages","setNumPages","useEffect","fetchSearchMovies","a","fetch","process","json","Math","ceil","totalResults","Response","Search","Pagination","count","window","scrollTo","size","Error","App","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","type","primary","light","main","dark","ThemeProvider","CssBaseline","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9037b60.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const NominationContext = createContext();\r\n\r\nexport const NominationProvider = (props) => {\r\n\tconst [nominations, setNominations] = useState(() => {\r\n\t\t// Get all previous nominees from browser localStorage\r\n\t\tvar allSavedNominees = [];\r\n\t\tvar keys = Object.keys(localStorage);\r\n\t\tvar i = keys.length;\r\n\r\n\t\twhile (i--) {\r\n\t\t\t//convert to JSON and add to array\r\n\t\t\tallSavedNominees.push(JSON.parse(localStorage.getItem(keys[i])));\r\n\t\t}\r\n\r\n\t\tconsole.log(\"imported nominees from storage\", allSavedNominees);\r\n\t\treturn allSavedNominees;\r\n\t});\r\n\treturn (\r\n\t\t<NominationContext.Provider value={[nominations, setNominations]}>{props.children}</NominationContext.Provider>\r\n\t);\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { AppBar, Toolbar, Typography, InputBase, fade, makeStyles, Badge, IconButton } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport NominateBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport NominateIcon from \"@material-ui/icons/Favorite\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\ttextDecoration: \"none\",\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"none\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tdisplay: \"block\",\r\n\t\t},\r\n\t},\r\n\tsearchDiv: {\r\n\t\tmarginLeft: \"auto\",\r\n\t},\r\n\tsearch: {\r\n\t\tposition: \"relative\",\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\r\n\t\t},\r\n\t\tright: 0,\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tmarginLeft: theme.spacing(1),\r\n\t\t\twidth: \"auto\",\r\n\t\t},\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tpointerEvents: \"none\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tinputRoot: {\r\n\t\tcolor: \"inherit\",\r\n\t},\r\n\tinputInput: {\r\n\t\tpadding: theme.spacing(1, 1, 1, 0),\r\n\t\t// vertical padding + font size from searchIcon\r\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n\t\ttransition: theme.transitions.create(\"width\"),\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\twidth: \"12ch\",\r\n\t\t\t\"&:focus\": {\r\n\t\t\t\twidth: \"20ch\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nfunction TopNavBar() {\r\n\tconst classes = useStyles();\r\n\tvar [searchVal, setSearchVal] = useState(\"\");\r\n\tconst [nominations, setNominations] = useContext(NominationContext);\r\n\tvar history = useHistory();\r\n\tvar location = useLocation();\r\n\r\n\tconst submitSearch = (event) => {\r\n\t\tif (event.key === \"Enter\") {\r\n\t\t\thistory.push(`/search/${searchVal}`);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AppBar position=\"static\">\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Link to=\"/\" className={classes.title}>\r\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\r\n\t\t\t\t\t\tMovie Nomination\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className={classes.searchDiv}>\r\n\t\t\t\t\t<div className={classes.search}>\r\n\t\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\tvalue={searchVal}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetSearchVal(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonKeyPress={submitSearch}\r\n\t\t\t\t\t\t\tplaceholder=\"Search…\"\r\n\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\troot: classes.inputRoot,\r\n\t\t\t\t\t\t\t\tinput: classes.inputInput,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tinputProps={{ \"aria-label\": \"search\" }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tkey=\"close\"\r\n\t\t\t\t\taria-label=\"Close\"\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t// TODO show all nomanies\r\n\t\t\t\t\t\tconsole.log(\"nominations\", nominations);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Badge color=\"secondary\" badgeContent={nominations.length}>\r\n\t\t\t\t\t\t<TrophyEmoji />\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n\r\nexport default TopNavBar;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nconst cardHeight = 360;\r\nconst cardWidth = 270;\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmargin: \"auto\",\r\n\t\tborderRadius: \"1rem\",\r\n\t\tboxShadow: \"none\",\r\n\t\tposition: \"relative\",\r\n\t\twidth: cardWidth,\r\n\t\theight: cardHeight,\r\n\t\ttransition: \"transform 0.3s\",\r\n\t\tboxShadow: \"0 4px 8px rgba(0,0,0,0.35);\",\r\n\t\t\"&:hover\": {\r\n\t\t\ttransform: \"translate(0, -5px)\",\r\n\t\t},\r\n\t\t\"&:after\": {\r\n\t\t\tcontent: '\"\"',\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"64%\",\r\n\t\t\tbottom: 0,\r\n\t\t\tzIndex: 1,\r\n\t\t\tbackground: \"linear-gradient(to top, #000, rgba(0,0,0,0))\",\r\n\t\t},\r\n\t},\r\n\tcontent: {\r\n\t\tposition: \"absolute\",\r\n\t\tzIndex: 2,\r\n\t\tleft: 0,\r\n\t\tbottom: 0,\r\n\t\twidth: cardWidth - 48,\r\n\t},\r\n\tmovieTitle: {\r\n\t\tfontFamily: \"Spartan\",\r\n\t\tfontWeight: 700,\r\n\t\tcolor: \"white\",\r\n\t\tmarginTop: 0,\r\n\t\tmarginBottom: 8,\r\n\t},\r\n\tmovieYear: {\r\n\t\tcolor: \"white\",\r\n\t\tfontWeight: 400,\r\n\t\tmarginTop: 0,\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\tcardImg: {\r\n\t\tverticalAlign: \"text-top\",\r\n\t\twidth: cardWidth,\r\n\t\theight: cardHeight,\r\n\t},\r\n\tnominateButton: {\r\n\t\tmargin: 8,\r\n\t\tposition: \"absolute\",\r\n\t\tzIndex: 2,\r\n\t\tcolor: \"white\",\r\n\t\ttop: 0,\r\n\t\tright: 0,\r\n\t},\r\n});\r\n\r\nfunction MovieCard(props) {\r\n\tconst classes = useStyles();\r\n\tconst [nominations, setNominations] = useContext(NominationContext);\r\n\tconst movie = props.movie;\r\n\tconst [selected, setSelected] = useState(() => {\r\n\t\tvar alreadyNominated = nominations.some((nominee) => {\r\n\t\t\treturn nominee.imdbID === movie.imdbID;\r\n\t\t});\r\n\t\treturn alreadyNominated;\r\n\t});\r\n\tconst maxNominations = 5;\r\n\r\n\tconst removeNomination = () => {\r\n\t\tsetNominations((prev) => {\r\n\t\t\treturn prev.filter((nominee) => nominee.imdbID !== movie.imdbID);\r\n\t\t});\r\n\t\tlocalStorage.removeItem(movie.imdbID);\r\n\t};\r\n\r\n\tconst addNomination = () => {\r\n\t\tvar index = nominations.findIndex((nominee) => nominee.imdbID === movie.imdbID);\r\n\t\tif (index === -1) {\r\n\t\t\tsetNominations((prev) => {\r\n\t\t\t\treturn [...prev, movie];\r\n\t\t\t});\r\n\t\t}\r\n\t\tlocalStorage.setItem(movie.imdbID, JSON.stringify(movie));\r\n\t};\r\n\r\n\tconst updateNominations = () => {\r\n\t\tif (localStorage.length >= maxNominations && !selected) {\r\n\t\t\talert(\"You have nominated 5 movies!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!selected) {\r\n\t\t\taddNomination();\r\n\t\t} else {\r\n\t\t\tremoveNomination();\r\n\t\t}\r\n\t\t//setState is async therefore updated state after updating nominations\r\n\t\tsetSelected(!selected);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className={classes.card}>\r\n\t\t\t\t{/* <CardActionArea> */}\r\n\t\t\t\t{movie.Poster !== \"N/A\" && (\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tclassName={classes.cardImg}\r\n\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\talt={movie.Title}\r\n\t\t\t\t\t\timage={movie.Poster}\r\n\t\t\t\t\t\ttitle={movie.Title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tclassName={classes.nominateButton}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tvalue=\"Nominate\"\r\n\t\t\t\t\tselected={selected}\r\n\t\t\t\t\tonClick={updateNominations}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tooltip TransitionComponent={Zoom} title=\"Nominate\" enterDelay={500}>\r\n\t\t\t\t\t\t<TrophyEmoji fontSize=\"large\" color={selected ? \"secondary\" : \"primary\"} />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Box py={3} px={3} className={classes.content}>\r\n\t\t\t\t\t<h2 className={classes.movieTitle}>{movie.Title}</h2>\r\n\t\t\t\t\t<h3 className={classes.movieYear}>{movie.Year}</h3>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{/* </CardActionArea> */}\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tgridItem: {\r\n\t\twidth: \"350px\",\r\n\t},\r\n}));\r\n\r\nfunction MovieList(props) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" spacing={3} direction=\"row\" alignItems=\"flex-start\">\r\n\t\t\t{props.movieList.map((movie) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid className={classes.gridItem} item key={movie.imdbID} lg={3}>\r\n\t\t\t\t\t\t<MovieCard movie={movie} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useContext } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\nimport { NominationContext } from \"./NominationContext\";\r\n\r\nfunction HomePage() {\r\n\tconst [nominations, setNominations] = useContext(NominationContext);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Nominations:</h1>\r\n\t\t\t<MovieList movieList={nominations} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport MovieList from \"./MovieList\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n// import * as searchResultJSON from \"./sample_data.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tsearchResult: {\r\n\t\t// boxSizing: \"border-box\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tdisplay: \"block\",\r\n\t\t},\r\n\t},\r\n\tCircularProgress: {\r\n\t\t// display: flex;\r\n\t\t// justify-content: center;\r\n\t\t// align-items: center;\r\n\t},\r\n\tpageSelector: {\r\n\t\tmargin: \"35px 0\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n}));\r\n\r\nfunction SearchResultPage(props) {\r\n\tconst classes = useStyles();\r\n\tconst searchQuery = props.match.params.id;\r\n\tconst [searchResultJSON, setSearchResultJSON] = useState({});\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [numPages, setNumPages] = useState(4);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSearchMovies();\r\n\t}, [searchQuery, page]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPage(1);\r\n\t}, [searchQuery]);\r\n\r\n\tconst fetchSearchMovies = async () => {\r\n\t\tconst searchResult = await fetch(\r\n\t\t\t`http://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=${searchQuery}&page=${page}`\r\n\t\t);\r\n\r\n\t\tconst searchResultJSON = await searchResult.json();\r\n\t\tsetSearchResultJSON(searchResultJSON);\r\n\t\tsetNumPages(Math.ceil(searchResultJSON.totalResults / 10));\r\n\t};\r\n\r\n\tconst changePage = (event, value) => {\r\n\t\tsetPage(value);\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tconsole.log(page);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.searchResult}>\r\n\t\t\t{searchResultJSON.Response === \"True\" ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t{searchResultJSON.totalResults} results found for {searchQuery}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<MovieList movieList={searchResultJSON.Search} />\r\n\t\t\t\t\t{numPages > 1 && (\r\n\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\tcount={numPages}\r\n\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\tonChange={changePage}\r\n\t\t\t\t\t\t\tclassName={classes.pageSelector}\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : searchResultJSON.Response === \"False\" ? (\r\n\t\t\t\t<h2>Error: {searchResultJSON.Error}</h2>\r\n\t\t\t) : (\r\n\t\t\t\t<CircularProgress color=\"secondary\" />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchResultPage;\r\n","import React from \"react\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TopNavBar from \"./TopNavBar\";\nimport HomePage from \"./HomePage\";\nimport SearchResultPage from \"./SearchResultPage\";\nimport { NominationProvider } from \"./NominationContext\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nfunction App() {\n\tconst prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n\t// const myColors = {\n\n\t// }\n\n\tconst theme = React.useMemo(\n\t\t() =>\n\t\t\tcreateMuiTheme({\n\t\t\t\tpalette: {\n\t\t\t\t\ttype: prefersDarkMode ? \"dark\" : \"light\",\n\t\t\t\t\tprimary: {\n\t\t\t\t\t\tlight: \"#00818a\",\n\t\t\t\t\t\tmain: \"#8f1eff\",\n\t\t\t\t\t\tdark: \"#8f1eff\",\n\t\t\t\t\t},\n\t\t\t\t\t// secondary: {\n\t\t\t\t\t//   light: myColors.whitesmoke,\n\t\t\t\t\t//   main: myColors.white,\n\t\t\t\t\t//   dark: myColors.snow,\n\t\t\t\t\t// },\n\t\t\t\t\t// info: {\n\t\t\t\t\t//   light: myColors.greenLight,\n\t\t\t\t\t//   main: myColors.green,\n\t\t\t\t\t//   dark: myColors.greenDark,\n\t\t\t\t\t// }\n\t\t\t\t},\n\t\t\t}),\n\t\t[prefersDarkMode]\n\t);\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<NominationProvider>\n\t\t\t\t<Router>\n\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<TopNavBar />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={HomePage} />\n\t\t\t\t\t\t\t<Route path=\"/search/:id\" component={SearchResultPage} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</NominationProvider>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}