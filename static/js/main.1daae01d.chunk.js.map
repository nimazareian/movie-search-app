{"version":3,"sources":["NominationContext.js","TopNavBar.js","MovieCard.js","MovieList.js","HomePage.js","SearchResultPage.js","App.js","index.js"],"names":["NominationContext","createContext","NominationProvider","children","useState","allSavedNominees","keys","Object","localStorage","i","length","push","JSON","parse","getItem","console","log","nominations","setNominations","Provider","value","require","config","useStyles","makeStyles","theme","title","textDecoration","color","display","breakpoints","up","searchDiv","marginLeft","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","right","width","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","TopNavBar","classes","useContext","searchVal","setSearchVal","history","useHistory","AppBar","Toolbar","to","ROOT_URL","className","Typography","variant","noWrap","InputBase","onChange","event","target","onKeyPress","key","placeholder","autoFocus","root","input","inputProps","IconButton","aria-label","Tooltip","TransitionComponent","Zoom","Badge","badgeContent","nominationIcon","card","margin","boxShadow","transform","content","bottom","zIndex","background","left","cardWidth","movieTitle","fontFamily","fontWeight","marginTop","marginBottom","movieYear","cardImg","verticalAlign","nominateButton","top","MovieCard","movie","openMaxAlert","setOpenMaxAlert","some","nominee","imdbID","selected","setSelected","Card","Poster","CardMedia","component","alt","Title","image","onClick","prev","filter","removeItem","findIndex","setItem","stringify","enterDelay","fontSize","CardActionArea","window","open","Box","py","px","Year","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","MovieList","movieList","Grid","container","justify","direction","map","item","lg","pageTitle","HomePage","searchResult","pageSelector","searchInfoText","SearchResultPage","match","searchQuery","params","searchResultJSON","setSearchResultJSON","page","setPage","numPages","setNumPages","useEffect","a","fetch","process","json","Math","ceil","totalResults","fetchSearchMovies","Response","Search","Pagination","count","scrollTo","Error","CircularProgress","maxWidth","App","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","type","primary","light","main","dark","ThemeProvider","CssBaseline","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1daae01d.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const NominationContext = createContext();\r\n\r\nexport const NominationProvider = ({ children }) => {\r\n  const [nominations, setNominations] = useState(() => {\r\n    // Get all previous nominees from browser localStorage\r\n    var allSavedNominees = [];\r\n    var keys = Object.keys(localStorage);\r\n    var i = keys.length;\r\n\r\n    while (i--) {\r\n      //convert to JSON and add to array\r\n      allSavedNominees.push(JSON.parse(localStorage.getItem(keys[i])));\r\n    }\r\n\r\n    console.log(\"imported nominees from storage\", allSavedNominees);\r\n    return allSavedNominees;\r\n  });\r\n\r\n  return <NominationContext.Provider value={[nominations, setNominations]}>{children}</NominationContext.Provider>;\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { ROOT_URL } from \"./App\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  InputBase,\r\n  fade,\r\n  makeStyles,\r\n  Badge,\r\n  Tooltip,\r\n  Zoom,\r\n  useTheme,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  searchDiv: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    right: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction TopNavBar() {\r\n  const classes = useStyles();\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n  var [searchVal, setSearchVal] = useState(\"\");\r\n  var history = useHistory();\r\n\r\n  const submitSearch = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      history.push(`${ROOT_URL}/search/${searchVal}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Link to={`${ROOT_URL}`} className={classes.title}>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Movie Nomination\r\n          </Typography>\r\n        </Link>\r\n        <div className={classes.searchDiv}>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              value={searchVal}\r\n              onChange={(event) => {\r\n                setSearchVal(event.target.value);\r\n              }}\r\n              onKeyPress={submitSearch}\r\n              placeholder=\"Search…\"\r\n              autoFocus={true}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Link to={`${ROOT_URL}`}>\r\n          <IconButton aria-label=\"Nominations\">\r\n            <Tooltip TransitionComponent={Zoom} title={`${nominations.length} Movies Nominated`}>\r\n              <Badge color=\"secondary\" badgeContent={nominations.length}>\r\n                <TrophyEmoji className={classes.nominationIcon} />\r\n              </Badge>\r\n            </Tooltip>\r\n          </IconButton>\r\n        </Link>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default TopNavBar;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport { CardActionArea } from \"@material-ui/core\";\r\n\r\nconst cardHeight = 360;\r\nconst cardWidth = 270;\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    margin: \"auto\",\r\n    borderRadius: \"1rem\",\r\n    boxShadow: \"none\",\r\n    position: \"relative\",\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    transition: \"transform 0.3s\",\r\n    boxShadow: \"0 4px 8px rgba(0,0,0,0.35);\",\r\n    \"&:hover\": {\r\n      transform: \"translate(0, -5px)\",\r\n    },\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"64%\",\r\n      bottom: 0,\r\n      zIndex: 1,\r\n      background: \"linear-gradient(to top, #000, rgba(0,0,0,0))\",\r\n    },\r\n  },\r\n  content: {\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    left: 0,\r\n    bottom: 0,\r\n    width: cardWidth - 48,\r\n  },\r\n  movieTitle: {\r\n    fontFamily: \"Spartan\",\r\n    fontWeight: 700,\r\n    color: \"white\",\r\n    marginTop: 0,\r\n    marginBottom: 8,\r\n  },\r\n  movieYear: {\r\n    color: \"white\",\r\n    fontWeight: 400,\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n  },\r\n  cardImg: {\r\n    verticalAlign: \"text-top\",\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n  },\r\n  nominateButton: {\r\n    margin: 8,\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    color: \"white\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n});\r\n\r\nfunction MovieCard({ movie }) {\r\n  const classes = useStyles();\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n  const maxNominations = 5;\r\n  const [openMaxAlert, setOpenMaxAlert] = useState(false);\r\n  const [selected, setSelected] = useState(() => {\r\n    var alreadyNominated = nominations.some((nominee) => {\r\n      return nominee.imdbID === movie.imdbID;\r\n    });\r\n    return alreadyNominated;\r\n  });\r\n\r\n  const removeNomination = () => {\r\n    setNominations((prev) => {\r\n      return prev.filter((nominee) => nominee.imdbID !== movie.imdbID);\r\n    });\r\n    localStorage.removeItem(movie.imdbID);\r\n  };\r\n\r\n  const addNomination = () => {\r\n    var index = nominations.findIndex((nominee) => nominee.imdbID === movie.imdbID);\r\n    if (index === -1) {\r\n      setNominations((prev) => {\r\n        return [...prev, movie];\r\n      });\r\n    }\r\n    localStorage.setItem(movie.imdbID, JSON.stringify(movie));\r\n  };\r\n\r\n  const updateNominations = () => {\r\n    if (localStorage.length >= maxNominations && !selected) {\r\n      setOpenMaxAlert(true);\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      addNomination();\r\n    } else {\r\n      removeNomination();\r\n    }\r\n    //setState is async therefore updated state after updating nominations\r\n    setSelected(!selected);\r\n  };\r\n\r\n  const viewDetailsInIMDB = () => window.open(`https://www.imdb.com/title/${movie.imdbID}/`, \"_blank\");\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        {movie.Poster !== \"N/A\" && (\r\n          <CardMedia\r\n            className={classes.cardImg}\r\n            component=\"img\"\r\n            alt={movie.Title}\r\n            image={movie.Poster}\r\n            title={movie.Title}\r\n          />\r\n        )}\r\n        <IconButton\r\n          className={classes.nominateButton}\r\n          variant=\"outlined\"\r\n          value=\"Nominate\"\r\n          selected={selected}\r\n          onClick={updateNominations}\r\n        >\r\n          <Tooltip TransitionComponent={Zoom} title=\"Nominate\" enterDelay={500}>\r\n            <TrophyEmoji fontSize=\"large\" color={selected ? \"secondary\" : \"primary\"} />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <CardActionArea onClick={viewDetailsInIMDB}>\r\n          <Box py={3} px={3} className={classes.content}>\r\n            <h2 className={classes.movieTitle}>{movie.Title}</h2>\r\n            <h3 className={classes.movieYear}>{movie.Year}</h3>\r\n          </Box>\r\n        </CardActionArea>\r\n      </Card>\r\n\r\n      <Dialog\r\n        open={openMaxAlert}\r\n        onClose={() => {\r\n          setOpenMaxAlert(false);\r\n        }}\r\n        aria-labelledby=\"Max Nominations Reached\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Alert:\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {`You have nominated ${maxNominations} movies, please remove some of your nominations to be able to add this movie.`}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nfunction MovieList({ movieList }) {\r\n  return (\r\n    <Grid container justify=\"center\" spacing={3} direction=\"row\" alignItems=\"flex-start\">\r\n      {movieList.map((movie) => {\r\n        return (\r\n          <Grid item key={movie.imdbID} lg={3}>\r\n            <MovieCard movie={movie} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useContext } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageTitle: {\r\n    marginLeft: 15,\r\n  },\r\n}));\r\n\r\nfunction HomePage() {\r\n  const classes = useStyles();\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={classes.pageTitle}>Nominations:</h1>\r\n      <MovieList movieList={nominations} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport MovieList from \"./MovieList\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n// import * as searchResultJSON from \"./sample_data.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchResult: {\r\n    // boxSizing: \"border-box\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  pageSelector: {\r\n    margin: \"35px 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  searchInfoText: {\r\n    marginLeft: 15,\r\n  },\r\n}));\r\n\r\nfunction SearchResultPage({ match }) {\r\n  const classes = useStyles();\r\n  const searchQuery = match.params.id;\r\n  const [searchResultJSON, setSearchResultJSON] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [numPages, setNumPages] = useState(4);\r\n\r\n  useEffect(() => {\r\n    const fetchSearchMovies = async () => {\r\n      const searchResult = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=${searchQuery}&page=${page}`\r\n      );\r\n\r\n      const searchResultJSON = await searchResult.json();\r\n      setSearchResultJSON(searchResultJSON);\r\n      setNumPages(Math.ceil(searchResultJSON.totalResults / 10));\r\n    };\r\n    fetchSearchMovies();\r\n  }, [searchQuery, page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [searchQuery]);\r\n\r\n  const changePage = (event, value) => {\r\n    setPage(value);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.searchResult}>\r\n      {searchResultJSON.Response === \"True\" ? (\r\n        <div>\r\n          <h2 className={classes.searchInfoText}>\r\n            {searchResultJSON.totalResults} results found for {searchQuery}\r\n          </h2>\r\n          <MovieList movieList={searchResultJSON.Search} />\r\n          {numPages > 1 && (\r\n            <Pagination\r\n              count={numPages}\r\n              page={page}\r\n              onChange={changePage}\r\n              className={classes.pageSelector}\r\n              color=\"secondary\"\r\n            />\r\n          )}\r\n        </div>\r\n      ) : searchResultJSON.Response === \"False\" ? (\r\n        <h2 className={classes.searchInfoText}>Error: {searchResultJSON.Error}</h2>\r\n      ) : (\r\n        <CircularProgress color=\"secondary\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultPage;\r\n","import React from \"react\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport TopNavBar from \"./TopNavBar\";\nimport HomePage from \"./HomePage\";\nimport SearchResultPage from \"./SearchResultPage\";\nimport { NominationProvider } from \"./NominationContext\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport const ROOT_URL = \"/movie-search-app\";\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    maxWidth: 1500,\n    margin: \"0 auto\",\n    [theme.breakpoints.up(\"sm\")]: {},\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n          primary: {\n            light: \"#00818a\",\n            main: \"#8f1eff\",\n            dark: \"#8f1eff\",\n          },\n          // secondary: {\n          //   light: myColors.whitesmoke,\n          //   main: myColors.white,\n          //   dark: myColors.snow,\n          // },\n          // info: {\n          //   light: myColors.greenLight,\n          //   main: myColors.green,\n          //   dark: myColors.greenDark,\n          // }\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <NominationProvider>\n        <Router>\n          <div className=\"App\">\n            <TopNavBar />\n            <Switch>\n              <div className={classes.page}>\n                <Route path={`${ROOT_URL}`} exact component={HomePage} />\n                <Route path={`${ROOT_URL}/search/:id`} component={SearchResultPage} />\n                <Route path=\"*\">\n                  <Redirect to={`${ROOT_URL}`} />\n                </Route>\n              </div>\n            </Switch>\n          </div>\n        </Router>\n      </NominationProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}