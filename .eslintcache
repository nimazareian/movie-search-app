[{"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\index.js":"1","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\App.js":"2","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\topNavBar.js":"3","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\TopNavBar.js":"4","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\SearchResultPage.js":"5","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\HomePage.js":"6","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\MovieCard.js":"7","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\NominationContext.js":"8","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\MovieList.js":"9"},{"size":146,"mtime":1609793337454,"results":"10","hashOfConfig":"11"},{"size":2212,"mtime":1609881141361,"results":"12","hashOfConfig":"11"},{"size":2191,"mtime":1608778350291,"results":"13","hashOfConfig":"11"},{"size":3454,"mtime":1609881414117,"results":"14","hashOfConfig":"11"},{"size":2484,"mtime":1609825092101,"results":"15","hashOfConfig":"11"},{"size":385,"mtime":1609793332967,"results":"16","hashOfConfig":"11"},{"size":4476,"mtime":1609793345262,"results":"17","hashOfConfig":"11"},{"size":772,"mtime":1609793879157,"results":"18","hashOfConfig":"11"},{"size":656,"mtime":1609793347984,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ugmbp6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\index.js",[],["42","43"],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\App.js",[],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\topNavBar.js",[],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\TopNavBar.js",["44","45","46","47","48"],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\SearchResultPage.js",["49","50"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport MovieList from \"./MovieList\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n// import * as searchResultJSON from \"./sample_data.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchResult: {\r\n    // boxSizing: \"border-box\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  CircularProgress: {\r\n    // display: flex;\r\n    // justify-content: center;\r\n    // align-items: center;\r\n  },\r\n  pageSelector: {\r\n    margin: \"35px 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nfunction SearchResultPage(props) {\r\n  const classes = useStyles();\r\n  const searchQuery = props.match.params.id;\r\n  const [searchResultJSON, setSearchResultJSON] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [numPages, setNumPages] = useState(4);\r\n\r\n  useEffect(() => {\r\n    const fetchSearchMovies = async () => {\r\n      const searchResult = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=${searchQuery}&page=${page}`\r\n      );\r\n\r\n      const searchResultJSON = await searchResult.json();\r\n      setSearchResultJSON(searchResultJSON);\r\n      setNumPages(Math.ceil(searchResultJSON.totalResults / 10));\r\n    };\r\n    fetchSearchMovies();\r\n  }, [searchQuery, page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [searchQuery]);\r\n\r\n  const changePage = (event, value) => {\r\n    setPage(value);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.searchResult}>\r\n      {searchResultJSON.Response === \"True\" ? (\r\n        <div>\r\n          <h2>\r\n            {searchResultJSON.totalResults} results found for {searchQuery}\r\n          </h2>\r\n          <MovieList movieList={searchResultJSON.Search} />\r\n          {numPages > 1 && (\r\n            <Pagination\r\n              count={numPages}\r\n              page={page}\r\n              onChange={changePage}\r\n              className={classes.pageSelector}\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n            />\r\n          )}\r\n        </div>\r\n      ) : searchResultJSON.Response === \"False\" ? (\r\n        <h2>Error: {searchResultJSON.Error}</h2>\r\n      ) : (\r\n        <CircularProgress color=\"secondary\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultPage;\r\n","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\HomePage.js",["51"],"import React, { useContext } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\nimport { NominationContext } from \"./NominationContext\";\r\n\r\nfunction HomePage() {\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Nominations:</h1>\r\n      <MovieList movieList={nominations} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\MovieCard.js",["52","53","54","55","56","57","58","59"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nconst cardHeight = 360;\r\nconst cardWidth = 270;\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    margin: \"auto\",\r\n    borderRadius: \"1rem\",\r\n    boxShadow: \"none\",\r\n    position: \"relative\",\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    transition: \"transform 0.3s\",\r\n    boxShadow: \"0 4px 8px rgba(0,0,0,0.35);\",\r\n    \"&:hover\": {\r\n      transform: \"translate(0, -5px)\",\r\n    },\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"64%\",\r\n      bottom: 0,\r\n      zIndex: 1,\r\n      background: \"linear-gradient(to top, #000, rgba(0,0,0,0))\",\r\n    },\r\n  },\r\n  content: {\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    left: 0,\r\n    bottom: 0,\r\n    width: cardWidth - 48,\r\n  },\r\n  movieTitle: {\r\n    fontFamily: \"Spartan\",\r\n    fontWeight: 700,\r\n    color: \"white\",\r\n    marginTop: 0,\r\n    marginBottom: 8,\r\n  },\r\n  movieYear: {\r\n    color: \"white\",\r\n    fontWeight: 400,\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n  },\r\n  cardImg: {\r\n    verticalAlign: \"text-top\",\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n  },\r\n  nominateButton: {\r\n    margin: 8,\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    color: \"white\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n});\r\n\r\nfunction MovieCard(props) {\r\n  const classes = useStyles();\r\n  const [nominations, setNominations] = useContext(NominationContext);\r\n  const movie = props.movie;\r\n  const [selected, setSelected] = useState(() => {\r\n    var alreadyNominated = nominations.some((nominee) => {\r\n      return nominee.imdbID === movie.imdbID;\r\n    });\r\n    return alreadyNominated;\r\n  });\r\n  const maxNominations = 5;\r\n\r\n  const removeNomination = () => {\r\n    setNominations((prev) => {\r\n      return prev.filter((nominee) => nominee.imdbID !== movie.imdbID);\r\n    });\r\n    localStorage.removeItem(movie.imdbID);\r\n  };\r\n\r\n  const addNomination = () => {\r\n    var index = nominations.findIndex((nominee) => nominee.imdbID === movie.imdbID);\r\n    if (index === -1) {\r\n      setNominations((prev) => {\r\n        return [...prev, movie];\r\n      });\r\n    }\r\n    localStorage.setItem(movie.imdbID, JSON.stringify(movie));\r\n  };\r\n\r\n  const updateNominations = () => {\r\n    if (localStorage.length >= maxNominations && !selected) {\r\n      alert(\"You have nominated 5 movies!\");\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      addNomination();\r\n    } else {\r\n      removeNomination();\r\n    }\r\n    //setState is async therefore updated state after updating nominations\r\n    setSelected(!selected);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        {/* <CardActionArea> */}\r\n        {movie.Poster !== \"N/A\" && (\r\n          <CardMedia\r\n            className={classes.cardImg}\r\n            component=\"img\"\r\n            alt={movie.Title}\r\n            image={movie.Poster}\r\n            title={movie.Title}\r\n          />\r\n        )}\r\n        <IconButton\r\n          className={classes.nominateButton}\r\n          variant=\"outlined\"\r\n          value=\"Nominate\"\r\n          selected={selected}\r\n          onClick={updateNominations}\r\n        >\r\n          <Tooltip TransitionComponent={Zoom} title=\"Nominate\" enterDelay={500}>\r\n            <TrophyEmoji fontSize=\"large\" color={selected ? \"secondary\" : \"primary\"} />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <Box py={3} px={3} className={classes.content}>\r\n          <h2 className={classes.movieTitle}>{movie.Title}</h2>\r\n          <h3 className={classes.movieYear}>{movie.Year}</h3>\r\n        </Box>\r\n        {/* </CardActionArea> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\NominationContext.js",[],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\MovieList.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":75,"nodeType":"66","messageId":"67","endLine":6,"endColumn":85},{"ruleId":"64","severity":1,"message":"68","line":9,"column":8,"nodeType":"66","messageId":"67","endLine":9,"endColumn":26},{"ruleId":"64","severity":1,"message":"69","line":10,"column":8,"nodeType":"66","messageId":"67","endLine":10,"endColumn":20},{"ruleId":"64","severity":1,"message":"70","line":72,"column":23,"nodeType":"66","messageId":"67","endLine":72,"endColumn":37},{"ruleId":"64","severity":1,"message":"71","line":74,"column":7,"nodeType":"66","messageId":"67","endLine":74,"endColumn":15},{"ruleId":"64","severity":1,"message":"72","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"73","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":17},{"ruleId":"64","severity":1,"message":"70","line":6,"column":23,"nodeType":"66","messageId":"67","endLine":6,"endColumn":37},{"ruleId":"64","severity":1,"message":"74","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"75","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":22},{"ruleId":"64","severity":1,"message":"76","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":19},{"ruleId":"64","severity":1,"message":"77","line":8,"column":8,"nodeType":"66","messageId":"67","endLine":8,"endColumn":19},{"ruleId":"64","severity":1,"message":"78","line":10,"column":8,"nodeType":"66","messageId":"67","endLine":10,"endColumn":14},{"ruleId":"64","severity":1,"message":"79","line":11,"column":8,"nodeType":"66","messageId":"67","endLine":11,"endColumn":18},{"ruleId":"64","severity":1,"message":"80","line":14,"column":8,"nodeType":"66","messageId":"67","endLine":14,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":31,"column":5,"nodeType":"83","messageId":"84","endLine":31,"endColumn":14},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'NominateBorderIcon' is defined but never used.","'NominateIcon' is defined but never used.","'setNominations' is assigned a value but never used.","'location' is assigned a value but never used.","'Grid' is defined but never used.","'MovieCard' is defined but never used.","'useEffect' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'ToggleButton' is defined but never used.","no-dupe-keys","Duplicate key 'boxShadow'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]