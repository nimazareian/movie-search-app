[{"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\index.js":"1","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\App.js":"2","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\topNavBar.js":"3","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\TopNavBar.js":"4","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\SearchResultPage.js":"5","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\HomePage.js":"6","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\MovieCard.js":"7","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\NominationContext.js":"8","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\MovieList.js":"9"},{"size":152,"mtime":1608760506616,"results":"10","hashOfConfig":"11"},{"size":1528,"mtime":1609302005221,"results":"12","hashOfConfig":"11"},{"size":2191,"mtime":1608778350291,"results":"13","hashOfConfig":"11"},{"size":3242,"mtime":1609148678285,"results":"14","hashOfConfig":"11"},{"size":2266,"mtime":1609304791344,"results":"15","hashOfConfig":"11"},{"size":372,"mtime":1609302969925,"results":"16","hashOfConfig":"11"},{"size":4154,"mtime":1609299424125,"results":"17","hashOfConfig":"11"},{"size":742,"mtime":1609148659487,"results":"18","hashOfConfig":"11"},{"size":681,"mtime":1609299834931,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ugmbp6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\index.js",[],["41","42"],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\App.js",[],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\topNavBar.js",[],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\TopNavBar.js",["43","44","45","46"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { AppBar, Toolbar, Typography, InputBase, fade, makeStyles, Badge, IconButton } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport NominateBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport NominateIcon from \"@material-ui/icons/Favorite\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\ttextDecoration: \"none\",\r\n\t\tcolor: \"white\",\r\n\t\tdisplay: \"none\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tdisplay: \"block\",\r\n\t\t},\r\n\t},\r\n\tsearchDiv: {\r\n\t\tmarginLeft: \"auto\",\r\n\t},\r\n\tsearch: {\r\n\t\tposition: \"relative\",\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\r\n\t\t},\r\n\t\tright: 0,\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tmarginLeft: theme.spacing(1),\r\n\t\t\twidth: \"auto\",\r\n\t\t},\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tpointerEvents: \"none\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tinputRoot: {\r\n\t\tcolor: \"inherit\",\r\n\t},\r\n\tinputInput: {\r\n\t\tpadding: theme.spacing(1, 1, 1, 0),\r\n\t\t// vertical padding + font size from searchIcon\r\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n\t\ttransition: theme.transitions.create(\"width\"),\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\twidth: \"12ch\",\r\n\t\t\t\"&:focus\": {\r\n\t\t\t\twidth: \"20ch\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nfunction TopNavBar() {\r\n\tconst classes = useStyles();\r\n\tvar [searchVal, setSearchVal] = useState(\"\");\r\n\tconst [nominations, setNominations] = useContext(NominationContext);\r\n\tvar history = useHistory();\r\n\tvar location = useLocation();\r\n\r\n\tconst submitSearch = (event) => {\r\n\t\tif (event.key === \"Enter\") {\r\n\t\t\thistory.push(`/search/${searchVal}`);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AppBar position=\"static\">\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Link to=\"/\" className={classes.title}>\r\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\r\n\t\t\t\t\t\tMovie Nomination\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className={classes.searchDiv}>\r\n\t\t\t\t\t<div className={classes.search}>\r\n\t\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\tvalue={searchVal}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetSearchVal(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonKeyPress={submitSearch}\r\n\t\t\t\t\t\t\tplaceholder=\"Searchâ€¦\"\r\n\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\troot: classes.inputRoot,\r\n\t\t\t\t\t\t\t\tinput: classes.inputInput,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tinputProps={{ \"aria-label\": \"search\" }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tkey=\"close\"\r\n\t\t\t\t\taria-label=\"Close\"\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t// TODO show all nomanies\r\n\t\t\t\t\t\tconsole.log(\"nominations\", nominations);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Badge color=\"secondary\" badgeContent={nominations.length}>\r\n\t\t\t\t\t\t<TrophyEmoji />\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n\r\nexport default TopNavBar;\r\n","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\SearchResultPage.js",["47","48","49"],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\HomePage.js",["50"],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\MovieCard.js",["51","52","53","54","55","56","57","58"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { NominationContext } from \"./NominationContext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TrophyEmoji from \"@material-ui/icons/EmojiEvents\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nconst cardHeight = 360;\r\nconst cardWidth = 270;\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmargin: \"auto\",\r\n\t\tborderRadius: \"1rem\",\r\n\t\tboxShadow: \"none\",\r\n\t\tposition: \"relative\",\r\n\t\twidth: cardWidth,\r\n\t\theight: cardHeight,\r\n\t\ttransition: \"transform 0.3s\",\r\n\t\tboxShadow: \"0 4px 8px rgba(0,0,0,0.35);\",\r\n\t\t\"&:hover\": {\r\n\t\t\ttransform: \"translate(0, -5px)\",\r\n\t\t},\r\n\t\t\"&:after\": {\r\n\t\t\tcontent: '\"\"',\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"64%\",\r\n\t\t\tbottom: 0,\r\n\t\t\tzIndex: 1,\r\n\t\t\tbackground: \"linear-gradient(to top, #000, rgba(0,0,0,0))\",\r\n\t\t},\r\n\t},\r\n\tcontent: {\r\n\t\tposition: \"absolute\",\r\n\t\tzIndex: 2,\r\n\t\tleft: 0,\r\n\t\tbottom: 0,\r\n\t\twidth: cardWidth - 48,\r\n\t},\r\n\tmovieTitle: {\r\n\t\tfontFamily: \"Spartan\",\r\n\t\tfontWeight: 700,\r\n\t\tcolor: \"white\",\r\n\t\tmarginTop: 0,\r\n\t\tmarginBottom: 8,\r\n\t},\r\n\tmovieYear: {\r\n\t\tcolor: \"white\",\r\n\t\tfontWeight: 400,\r\n\t\tmarginTop: 0,\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\tcardImg: {\r\n\t\tverticalAlign: \"text-top\",\r\n\t\twidth: cardWidth,\r\n\t\theight: cardHeight,\r\n\t},\r\n\tnominateButton: {\r\n\t\tmargin: 8,\r\n\t\tposition: \"absolute\",\r\n\t\tzIndex: 2,\r\n\t\tcolor: \"white\",\r\n\t\ttop: 0,\r\n\t\tright: 0,\r\n\t},\r\n});\r\n\r\nfunction MovieCard(props) {\r\n\tconst classes = useStyles();\r\n\tconst [nominations, setNominations] = useContext(NominationContext);\r\n\tconst movie = props.movie;\r\n\tconst [selected, setSelected] = useState(() => {\r\n\t\tvar alreadyNominated = nominations.some((nominee) => {\r\n\t\t\treturn nominee.imdbID === movie.imdbID;\r\n\t\t});\r\n\t\treturn alreadyNominated;\r\n\t});\r\n\tconst maxNominations = 5;\r\n\r\n\tconst removeNomination = () => {\r\n\t\tsetNominations((prev) => {\r\n\t\t\treturn prev.filter((nominee) => nominee.imdbID !== movie.imdbID);\r\n\t\t});\r\n\t\tlocalStorage.removeItem(movie.imdbID);\r\n\t};\r\n\r\n\tconst addNomination = () => {\r\n\t\tvar index = nominations.findIndex((nominee) => nominee.imdbID === movie.imdbID);\r\n\t\tif (index === -1) {\r\n\t\t\tsetNominations((prev) => {\r\n\t\t\t\treturn [...prev, movie];\r\n\t\t\t});\r\n\t\t}\r\n\t\tlocalStorage.setItem(movie.imdbID, JSON.stringify(movie));\r\n\t};\r\n\r\n\tconst updateNominations = () => {\r\n\t\tif (localStorage.length >= maxNominations && !selected) {\r\n\t\t\talert(\"You have nominated 5 movies!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!selected) {\r\n\t\t\taddNomination();\r\n\t\t} else {\r\n\t\t\tremoveNomination();\r\n\t\t}\r\n\t\t//setState is async therefore updated state after updating nominations\r\n\t\tsetSelected(!selected);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className={classes.card}>\r\n\t\t\t\t{/* <CardActionArea> */}\r\n\t\t\t\t{movie.Poster !== \"N/A\" && (\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tclassName={classes.cardImg}\r\n\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\talt={movie.Title}\r\n\t\t\t\t\t\timage={movie.Poster}\r\n\t\t\t\t\t\ttitle={movie.Title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tclassName={classes.nominateButton}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tvalue=\"Nominate\"\r\n\t\t\t\t\tselected={selected}\r\n\t\t\t\t\tonClick={updateNominations}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tooltip TransitionComponent={Zoom} title=\"Nominate\" enterDelay={500}>\r\n\t\t\t\t\t\t<TrophyEmoji fontSize=\"large\" color={selected ? \"secondary\" : \"primary\"} />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Box py={3} px={3} className={classes.content}>\r\n\t\t\t\t\t<h2 className={classes.movieTitle}>{movie.Title}</h2>\r\n\t\t\t\t\t<h3 className={classes.movieYear}>{movie.Year}</h3>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{/* </CardActionArea> */}\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MovieCard;\r\n","D:\\Nima\\Web Development\\movie-suggestion-app\\src\\NominationContext.js",[],"D:\\Nima\\Web Development\\movie-suggestion-app\\src\\MovieList.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":9,"column":8,"nodeType":"65","messageId":"66","endLine":9,"endColumn":20},{"ruleId":"63","severity":1,"message":"68","line":68,"column":22,"nodeType":"65","messageId":"66","endLine":68,"endColumn":36},{"ruleId":"63","severity":1,"message":"69","line":70,"column":6,"nodeType":"65","messageId":"66","endLine":70,"endColumn":14},{"ruleId":"63","severity":1,"message":"70","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"71","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":39,"column":5,"nodeType":"74","endLine":39,"endColumn":24,"suggestions":"75"},{"ruleId":"63","severity":1,"message":"68","line":6,"column":22,"nodeType":"65","messageId":"66","endLine":6,"endColumn":36},{"ruleId":"63","severity":1,"message":"76","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"77","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":22},{"ruleId":"63","severity":1,"message":"78","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":19},{"ruleId":"63","severity":1,"message":"79","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":19},{"ruleId":"63","severity":1,"message":"80","line":10,"column":8,"nodeType":"65","messageId":"66","endLine":10,"endColumn":14},{"ruleId":"63","severity":1,"message":"81","line":11,"column":8,"nodeType":"65","messageId":"66","endLine":11,"endColumn":18},{"ruleId":"63","severity":1,"message":"82","line":14,"column":8,"nodeType":"65","messageId":"66","endLine":14,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":31,"column":3,"nodeType":"85","messageId":"86","endLine":31,"endColumn":12},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'NominateBorderIcon' is defined but never used.","Identifier","unusedVar","'NominateIcon' is defined but never used.","'setNominations' is assigned a value but never used.","'location' is assigned a value but never used.","'Grid' is defined but never used.","'MovieCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSearchMovies'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'useEffect' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'ToggleButton' is defined but never used.","no-dupe-keys","Duplicate key 'boxShadow'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [searchQuery, page, fetchSearchMovies]",{"range":"92","text":"93"},[1104,1123],"[searchQuery, page, fetchSearchMovies]"]